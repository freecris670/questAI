"use client";

import { useState } from 'react';
import { MainHeader } from '@/components/layout/MainHeader';
import { MainFooter } from '@/components/layout/MainFooter';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { ChevronLeft } from 'lucide-react';
import Link from 'next/link';

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ç–∞–ø–∞ 5.1 –∏–∑ UserFlow
 */
export default function SettingsPage() {
  const [activeTab, setActiveTab] = useState<string>("profile");
  
  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
  const [userData, setUserData] = useState({
    avatar: "/avatars/default.png",
    username: "–ò—Å–∫–∞—Ç–µ–ª—å –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–π",
    email: "user@example.com",
    bio: "–õ—é–±–ª—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∫–≤–µ—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏."
  });
  
  const [preferences, setPreferences] = useState({
    questStyle: "fantasy",
    difficulty: "explorer",
    theme: "system",
    motivation: "achievements"
  });
  
  const [integrations, setIntegrations] = useState({
    calendar: false,
    googleTasks: false,
    microsoftTodo: false
  });
  
  const [notifications, setNotifications] = useState({
    email: true,
    browser: true,
    questCompletions: true,
    newAchievements: true,
    reminders: true,
    frequency: "daily"
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const handleProfileChange = (field: string, value: string) => {
    setUserData(prev => ({ ...prev, [field]: value }));
  };
  
  const handlePreferencesChange = (field: string, value: string | boolean) => {
    setPreferences(prev => ({ ...prev, [field]: value }));
  };
  
  const handleIntegrationsChange = (field: string, value: boolean) => {
    setIntegrations(prev => ({ ...prev, [field]: value }));
  };
  
  const handleNotificationsChange = (field: string, value: string | boolean) => {
    setNotifications(prev => ({ ...prev, [field]: value }));
  };
  
  const handleSaveSettings = () => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('–°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', { userData, preferences, integrations, notifications });
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
  };
  
  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex flex-col">
      <MainHeader />
      
      <main className="container mx-auto px-4 py-8 mt-24 flex-grow">
        <div className="flex items-center mb-6">
          <Link href="/my-quests" className="flex items-center text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
            <ChevronLeft size={16} className="mr-1" /> 
            <span>–ù–∞–∑–∞–¥ –∫ –∫–≤–µ—Å—Ç–∞–º</span>
          </Link>
        </div>
        
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden">
          <div className="p-6 border-b border-gray-200 dark:border-gray-700">
            <h1 className="text-2xl font-semibold text-gray-900 dark:text-white">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h1>
            <p className="text-gray-600 dark:text-gray-400 mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏</p>
          </div>
          
          <Tabs defaultValue={activeTab} className="w-full" onValueChange={(value) => setActiveTab(value as string)}>
            <div className="p-4 border-b border-gray-200 dark:border-gray-700">
              <TabsList className="grid grid-cols-4 gap-4">
                <TabsTrigger value="profile">–ü—Ä–æ—Ñ–∏–ª—å</TabsTrigger>
                <TabsTrigger value="preferences">–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è</TabsTrigger>
                <TabsTrigger value="integrations">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</TabsTrigger>
                <TabsTrigger value="notifications">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</TabsTrigger>
              </TabsList>
            </div>
            
            <div className="p-6">
              {/* –í–∫–ª–∞–¥–∫–∞ –ü—Ä–æ—Ñ–∏–ª—å */}
              <TabsContent value="profile" className="space-y-6">
                <div className="flex flex-col items-center md:flex-row md:items-start gap-6">
                  <div className="w-32 h-32 relative">
                    <div className="w-full h-full rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center overflow-hidden">
                      <span className="text-4xl text-gray-400 dark:text-gray-500">üë§</span>
                    </div>
                    <Button 
                      variant="outline" 
                      size="sm" 
                      className="absolute bottom-0 right-0 rounded-full" 
                      onClick={() => alert('–§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏')}
                    >
                      –ò–∑–º–µ–Ω–∏—Ç—å
                    </Button>
                  </div>
                  
                  <div className="flex-1 space-y-4 w-full">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="username">–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</Label>
                        <Input 
                          id="username" 
                          value={userData.username} 
                          onChange={(e) => handleProfileChange('username', e.target.value)} 
                        />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="email">Email</Label>
                        <Input 
                          id="email" 
                          value={userData.email} 
                          onChange={(e) => handleProfileChange('email', e.target.value)} 
                        />
                      </div>
                    </div>
                    
                    <div className="space-y-2">
                      <Label htmlFor="bio">–û —Å–µ–±–µ</Label>
                      <Textarea 
                        id="bio" 
                        value={userData.bio} 
                        onChange={(e) => handleProfileChange('bio', e.target.value)} 
                        rows={4} 
                      />
                    </div>
                  </div>
                </div>
              </TabsContent>
              
              {/* –í–∫–ª–∞–¥–∫–∞ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è */}
              <TabsContent value="preferences" className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-2">
                    <Label htmlFor="questStyle">–°—Ç–∏–ª—å –∫–≤–µ—Å—Ç–æ–≤</Label>
                    <Select 
                      value={preferences.questStyle} 
                      onValueChange={(value) => handlePreferencesChange('questStyle', value)}
                    >
                      <SelectTrigger id="questStyle">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="fantasy">–§—ç–Ω—Ç–µ–∑–∏</SelectItem>
                        <SelectItem value="scifi">–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞</SelectItem>
                        <SelectItem value="realism">–†–µ–∞–ª–∏–∑–º</SelectItem>
                        <SelectItem value="cyberpunk">–ö–∏–±–µ—Ä–ø–∞–Ω–∫</SelectItem>
                        <SelectItem value="historical">–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div className="space-y-2">
                    <Label htmlFor="difficulty">–°–ª–æ–∂–Ω–æ—Å—Ç—å</Label>
                    <Select 
                      value={preferences.difficulty} 
                      onValueChange={(value) => handlePreferencesChange('difficulty', value)}
                    >
                      <SelectTrigger id="difficulty">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="beginner">–ù–æ–≤–∏—á–æ–∫</SelectItem>
                        <SelectItem value="explorer">–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π</SelectItem>
                        <SelectItem value="hero">–ì–µ—Ä–æ–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div className="space-y-2">
                    <Label htmlFor="theme">–¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</Label>
                    <Select 
                      value={preferences.theme} 
                      onValueChange={(value) => handlePreferencesChange('theme', value)}
                    >
                      <SelectTrigger id="theme">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="light">–°–≤–µ—Ç–ª–∞—è</SelectItem>
                        <SelectItem value="dark">–¢–µ–º–Ω–∞—è</SelectItem>
                        <SelectItem value="system">–°–∏—Å—Ç–µ–º–Ω–∞—è</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div className="space-y-2">
                    <Label htmlFor="motivation">–ß—Ç–æ –≤–∞—Å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç?</Label>
                    <Select 
                      value={preferences.motivation} 
                      onValueChange={(value) => handlePreferencesChange('motivation', value)}
                    >
                      <SelectTrigger id="motivation">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–æ—Ç–∏–≤–∞—Ü–∏–∏" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="achievements">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</SelectItem>
                        <SelectItem value="progress">–ü—Ä–æ–≥—Ä–µ—Å—Å</SelectItem>
                        <SelectItem value="competition">–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ</SelectItem>
                        <SelectItem value="rewards">–ù–∞–≥—Ä–∞–¥—ã</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </TabsContent>
              
              {/* –í–∫–ª–∞–¥–∫–∞ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ */}
              <TabsContent value="integrations" className="space-y-6">
                <div className="space-y-4">
                  <div className="flex items-center justify-between py-2">
                    <div className="space-y-0.5">
                      <Label className="text-base">Google –ö–∞–ª–µ–Ω–¥–∞—Ä—å</Label>
                      <p className="text-sm text-gray-500 dark:text-gray-400">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–æ–≤ —Å –≤–∞—à–∏–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º</p>
                    </div>
                    <Switch 
                      checked={integrations.calendar} 
                      onCheckedChange={(value) => handleIntegrationsChange('calendar', value)} 
                    />
                  </div>
                  
                  <div className="flex items-center justify-between py-2">
                    <div className="space-y-0.5">
                      <Label className="text-base">Google Tasks</Label>
                      <p className="text-sm text-gray-500 dark:text-gray-400">–ò–º–ø–æ—Ä—Ç –∑–∞–¥–∞—á –∏–∑ Google Tasks</p>
                    </div>
                    <Switch 
                      checked={integrations.googleTasks} 
                      onCheckedChange={(value) => handleIntegrationsChange('googleTasks', value)} 
                    />
                  </div>
                  
                  <div className="flex items-center justify-between py-2">
                    <div className="space-y-0.5">
                      <Label className="text-base">Microsoft To Do</Label>
                      <p className="text-sm text-gray-500 dark:text-gray-400">–ò–º–ø–æ—Ä—Ç –∑–∞–¥–∞—á –∏–∑ Microsoft To Do</p>
                    </div>
                    <Switch 
                      checked={integrations.microsoftTodo} 
                      onCheckedChange={(value) => handleIntegrationsChange('microsoftTodo', value)} 
                    />
                  </div>
                </div>
              </TabsContent>
              
              {/* –í–∫–ª–∞–¥–∫–∞ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
              <TabsContent value="notifications" className="space-y-6">
                <div className="space-y-4">
                  <div className="flex items-center justify-between py-2">
                    <div className="space-y-0.5">
                      <Label className="text-base">Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                      <p className="text-sm text-gray-500 dark:text-gray-400">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É</p>
                    </div>
                    <Switch 
                      checked={notifications.email} 
                      onCheckedChange={(value) => handleNotificationsChange('email', value)} 
                    />
                  </div>
                  
                  <div className="flex items-center justify-between py-2">
                    <div className="space-y-0.5">
                      <Label className="text-base">–ë—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                      <p className="text-sm text-gray-500 dark:text-gray-400">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
                    </div>
                    <Switch 
                      checked={notifications.browser} 
                      onCheckedChange={(value) => handleNotificationsChange('browser', value)} 
                    />
                  </div>
                  
                  <div className="space-y-4 pt-4 border-t border-gray-200 dark:border-gray-700">
                    <h3 className="font-medium text-lg">–¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
                    
                    <div className="flex items-center justify-between py-2">
                      <Label className="text-base">–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤</Label>
                      <Switch 
                        checked={notifications.questCompletions} 
                        onCheckedChange={(value) => handleNotificationsChange('questCompletions', value)} 
                      />
                    </div>
                    
                    <div className="flex items-center justify-between py-2">
                      <Label className="text-base">–ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</Label>
                      <Switch 
                        checked={notifications.newAchievements} 
                        onCheckedChange={(value) => handleNotificationsChange('newAchievements', value)} 
                      />
                    </div>
                    
                    <div className="flex items-center justify-between py-2">
                      <Label className="text-base">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</Label>
                      <Switch 
                        checked={notifications.reminders} 
                        onCheckedChange={(value) => handleNotificationsChange('reminders', value)} 
                      />
                    </div>
                  </div>
                  
                  <div className="space-y-2 pt-4">
                    <Label htmlFor="frequency">–ß–∞—Å—Ç–æ—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</Label>
                    <Select 
                      value={notifications.frequency} 
                      onValueChange={(value) => handleNotificationsChange('frequency', value)}
                    >
                      <SelectTrigger id="frequency">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="realtime">–í —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</SelectItem>
                        <SelectItem value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</SelectItem>
                        <SelectItem value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </TabsContent>
            </div>
          </Tabs>
          
          <div className="p-6 border-t border-gray-200 dark:border-gray-700 flex justify-end">
            <Button onClick={handleSaveSettings} className="bg-quest-blue hover:bg-quest-blue/90">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
          </div>
        </div>
      </main>
      
      <MainFooter />
    </div>
  );
}
